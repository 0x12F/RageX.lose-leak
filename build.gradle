plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenCentral()
    maven { url "https://jitpack.io" }
    jcenter() // Discord-RPC için gerekli
}

loom {
    accessWidenerPath = file("src/main/resources/oyvey.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Eski Discord-RPC kaldırıldı
    // include implementation('com.github.Vatuu:discord-rpc:1.6.2')
    // Yeni Discord-RPC (Minnced)
    include implementation('club.minnced:java-discord-rpc:2.0.2')
    include implementation("com.github.cattyngmd.catformat:catformat-core:${project.catformat_version}")
    include modImplementation("com.github.cattyngmd.catformat:catformat-fabric:${project.catformat_version}")

    // JavaFX (Java 17+ için, Java 21 ile de uyumlu)
    implementation "org.openjfx:javafx-base:21.0.2:win"
    implementation "org.openjfx:javafx-controls:21.0.2:win"
    implementation "org.openjfx:javafx-graphics:21.0.2:win"
    // Eğer başka platformda derleyeceksen :win yerine :linux veya :mac kullan

    // JNA ve JNA-Platform: Sürüm uyumsuzluğu yaşamamak için 5.15.0'a yükseltildi ve zorlandı
    implementation 'net.java.dev.jna:jna:5.15.0'
    implementation 'net.java.dev.jna:jna-platform:5.15.0'
    implementation 'com.github.oshi:oshi-core:6.6.5'
}

configurations.all {
    resolutionStrategy {
        force 'net.java.dev.jna:jna:5.15.0'
        force 'net.java.dev.jna:jna-platform:5.15.0'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
